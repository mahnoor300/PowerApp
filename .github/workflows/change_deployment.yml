name: Incremental Deployment

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'The name of the solution.'
        required: true
        default: 'powerappsol'
      solution_shipping_folder:
        description: 'Folder for staging the exported solution.'
        required: true
        default: 'out/ship/'
      solution_outbound_folder:
        description: 'Folder for staging the unpacked solution before check-in.'
        required: true
        default: 'out/solutions/'
      solution_source_folder:
        description: 'Folder for the solution to be checked in.'
        required: true
        default: 'solutions/'
      solution_release_folder:
        description: 'Folder where the released binaries are hosted.'
        required: true
        default: 'out/release/'

jobs:
  check-for-changes:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Detect changes in solution
        id: changes
        run: |
          # PowerShell script to check if there are any changes in the solution folder
          $solution_folder = "${{ inputs.solution_source_folder }}/${{ inputs.solution_name }}"
          $changes = git diff --quiet $solution_folder
          if ($changes -eq $null) {
            Write-Host "No changes detected."
            echo "::set-output name=has_changes::false"
          } else {
            Write-Host "Changes detected."
            echo "::set-output name=has_changes::true"
          }

  convert-to-managed:
    needs: check-for-changes
    if: steps.changes.outputs.has_changes == 'true'
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Install PAC CLI
        uses: microsoft/powerplatform-actions/actions-install@v1
        with:
          cloud: 'Public'

      - name: Pack solution (only changed components)
        uses: microsoft/powerplatform-actions/pack-solution@v1
        with:
          solution-folder: out/solutions/${{ inputs.solution_name }}
          solution-file: out/solutions/${{ inputs.solution_name }}.zip
          solution-type: Unmanaged

      - name: Export solution as managed
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{secrets.BUILD_ENVIRONMENT_URL}}
          app-id: ${{secrets.CLIENT_ID}}
          client-secret: ${{ secrets.envSecret }}
          tenant-id: ${{secrets.TENANT_ID}}
          solution-name: ${{ inputs.solution_name }}
          managed: true
          solution-output-file: out/ship/${{ inputs.solution_name }}_managed.zip

      - name: Upload the managed solution to GitHub artifact store
        uses: actions/upload-artifact@v4
        with:
          name: managedSolutions
          path: out/ship/${{ inputs.solution_name }}_managed.zip

  deploy-to-prod:
    needs: [convert-to-managed]
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download managed solution from artifact store
        uses: actions/download-artifact@v4
        with:
          name: managedSolutions
          path: out/release/

      - name: Install PAC CLI
        uses: microsoft/powerplatform-actions/actions-install@v1
        with:
          cloud: 'Public'

      - name: Import solution to production
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: ${{secrets.PRODUCTION_ENVIRONMENT_URL}}
          app-id: ${{secrets.CLIENT_ID}}
          client-secret: ${{ secrets.envSecret }}
          tenant-id: ${{secrets.TENANT_ID}}
          solution-file: out/release/${{ inputs.solution_name }}_managed.zip
          force-overwrite: true
          publish-changes: true
