name: multiple-release-solution-to-prod-reusable

on:
  workflow_call:
    inputs: 
      solutions:
        description: 'Comma separated list of solution names to be worked on from Power Platform'
        type: string
        default: 'devsol, gitsol, powerappsol'  # Comma-separated list of solutions
      solution_shipping_folder:
        description: 'Folder name for staging the exported solution *do not change*'        
        type: string
        default: out/ship/
      solution_outbound_folder:
        description: 'Staging the unpacked solution folder before check-in *do not change*'
        type: string
        default: out/solutions/
      solution_source_folder: 
        description: 'Folder name to be created and checked in *do not change*'
        type: string
        default: solutions/
      solution_release_folder:
        description: 'Folder where the released binaries are going to be hosted *do not change*'
        type: string
        default: out/release

    secrets:
      envSecret:
        description: 'The secret value for authentication using SPN'
        required: true
      BUILD_ENVIRONMENT_URL:
        description: 'Build environment URL.'
        required: true      
      PRODUCTION_ENVIRONMENT_URL: 
        description: 'Production environment URL.'
        required: true
      CLIENT_ID: 
        description: 'The client ID'
        required: true
      TENANT_ID: 
        description: 'The tenant ID'
        required: true

jobs:
  convert-to-managed:
    runs-on: windows-latest
    strategy:
      matrix:
        solution: [devsol, gitsol, powerappsol] 
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Install PAC CLI
      uses: microsoft/powerplatform-actions/actions-install@v1
      with:
        cloud: 'Public'
        
    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@v1
      with:
        solution-folder: ${{ inputs.solution_source_folder }}/${{ matrix.solution }}
        solution-file: ${{ inputs.solution_outbound_folder }}/${{ matrix.solution }}.zip
        solution-type: Unmanaged
        other-folder-path: "solutions/${{ matrix.solution }}/Other"

    - name: Import solution as unmanaged to build env
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{ secrets.BUILD_ENVIRONMENT_URL }}
        app-id: ${{ secrets.CLIENT_ID }}
        client-secret: ${{ secrets.envSecret }}
        tenant-id: ${{ secrets.TENANT_ID }}
        solution-file: ${{ inputs.solution_outbound_folder }}/${{ matrix.solution }}.zip
        force-overwrite: true
        publish-changes: true

    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{ secrets.BUILD_ENVIRONMENT_URL }}
        app-id: ${{ secrets.CLIENT_ID }}
        client-secret: ${{ secrets.envSecret }}
        tenant-id: ${{ secrets.TENANT_ID }}
        solution-name: ${{ matrix.solution }}
        managed: true
        solution-output-file: ${{ inputs.solution_shipping_folder }}/${{ matrix.solution }}_managed.zip

    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-artifact@v4
      with:
        name: managedSolutions
        path: ${{ inputs.solution_shipping_folder }}/

  release-to-staging:
    needs: [ convert-to-managed ]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
    environment:
      name: staging  # This references the environment where approval is required
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Fetch the ready to ship solution from GH artifact store
      uses: actions/download-artifact@v4
      with:
        name: managedSolutions
        path: ${{ inputs.solution_release_folder }}

    - name: Install PAC CLI
      uses: microsoft/powerplatform-actions/actions-install@v1
      with:
        cloud: 'Public'
        
    - name: Import solution to prod env
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{ secrets.PRODUCTION_ENVIRONMENT_URL }}
        app-id: ${{ secrets.CLIENT_ID }}
        client-secret: ${{ secrets.envSecret }}
        tenant-id: ${{ secrets.TENANT_ID }}
        solution-file: ${{ inputs.solution_release_folder }}/${{ matrix.solution }}_managed.zip
        force-overwrite: true
        publish-changes: true
